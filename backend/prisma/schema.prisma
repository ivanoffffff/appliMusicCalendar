generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  favorites UserFavorite[]

  @@map("users")
}

model Artist {
  id          String   @id @default(cuid())
  spotifyId   String?  @unique
  name        String
  genres      String   // JSON string pour simplicité
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  favorites UserFavorite[]
  releases  Release[]

  @@map("artists")
}

model UserFavorite {
  id       String @id @default(cuid())
  userId   String
  artistId String
  category String @default("default")
  addedAt  DateTime @default(now())

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  artist Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)

  @@unique([userId, artistId])
  @@map("user_favorites")
}

model Release {
  id          String      @id @default(cuid())
  spotifyId   String?     @unique
  name        String
  releaseType ReleaseType
  releaseDate DateTime
  imageUrl    String?
  spotifyUrl  String?
  trackCount  Int?        // AJOUTÉ: Nombre de pistes
  duration    Int?        // AJOUTÉ: Durée en secondes
  isExplicit  Boolean     @default(false) // AJOUTÉ: Contenu explicite
  popularity  Int?        // AJOUTÉ: Popularité Spotify
  artistId    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  artist Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)

  @@map("releases")
}

enum ReleaseType {
  ALBUM
  SINGLE
  EP
}
